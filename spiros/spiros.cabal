cabal-version:       2.2
                     -- ^ « v2.2 » provides « common » stanzas.

build-type:          Simple

--------------------------------------------------

name:                spiros
version:             0.3.2

--x-revision:          1

--------------------------------------------------

author:              Spiros Boosalis
maintainer:          samboosalis@gmail.com

--------------------------------------------------
-- Description -----------------------------------
--------------------------------------------------

synopsis:            Custom Prelude (sboo / sboosali)

category:            Prelude

--------------------------------------------------

description:         My custom prelude (I'm @\@sboosali@ on GitHub and @user/sboo@ on Hackage.) 
                     .
                     Diverges slightly from base's: adding, removing, and shadowing.
                     .
                     
                     .

--------------------------------------------------
-- Portability -----------------------------------
--------------------------------------------------

stability: provisional

--------------------------------------------------

tested-with: GHC   == 8.6.3
           , GHC   == 8.4.4
           , GHC   == 8.2.2
           , GHC   == 8.0.2
--         , GHC   == 7.10.3
           , GHCJS == 8.4.0.1

--------------------------------------------------
-- Licensing -------------------------------------
--------------------------------------------------

license:             Apache-2.0
license-file:        LICENSE
copyright:           2019 Sam Boosalis

--------------------------------------------------
-- Files -----------------------------------------
--------------------------------------------------

data-dir: data

--------------------------------------------------

extra-source-files: README.md

--------------------------------------------------

--TODO add images
-- extra-doc-files: docs/

--------------------------------------------------
-- Repository ------------------------------------
--------------------------------------------------

homepage:    https://github.com/sboosali/spiros#readme
bug-reports: https://github.com/sboosali/spiros#issues

--------------------------------------------------

source-repository head
  type:     git
  location: https://github.com/sboosali/spiros
  subdir:   spiros

--------------------------------------------------
-- Flags -----------------------------------------
--------------------------------------------------

flag develop

  default:     False

  description: Exposed internals and/or dynamic typechecking (for development).

  manual:      True

--------------------------------------------------

flag static

  default:     False

  description: Build a statically-linked dynamic-library (NOTE you should also, via « ./nix/static.nix », provision an environment with « musl » and other statically-linkable C Libraries.)

  manual:      True

--------------------------------------------------
-- Common Stanzas --------------------------------
--------------------------------------------------

common Haskell2020Library

 -----------------------------

 default-language: Haskell2010

 -----------------------------
 -- cross-platform (operating system)
 -----------------------------

 -- if   os(linux)
 -- --   linux-only:
 -- --   ...
 -- elif os(windows)
 -- --   windows-only:
 -- --   ...
 -- elif os(darwin)
 -- --   mac-only:
 -- --   ...

 -- ^ See « System.Info.os ».

 -- ^ NOTE « os(windows) » canonicalizes « os(mingw32) », « os(cygwin32) », etc.

 -----------------------------
 -- cross-platform (architecture)
 -----------------------------

 -- if   arch(x86_64)
 -- --   64-bit-only:
 -- --   ...
 -- elif arch(i386)
 -- --   32-bit-only:
 -- --   ...

 -- ^ See « System.Info.arch ».

 -----------------------------
 -- development settings -----
 -----------------------------

 if flag(develop)
 
    cpp-options: -DDEVELOP

                 -- ^ Define the « DEVELOP » symbol (for CPP).

 -----------------------------

 if flag(develop) && impl(ghc >= 8.0)

    ghc-options: -fdefer-typed-holes

                 -- ^ Use « typed-holes » (not « undefined ») during development.

 -----------------------------
 -- etc ----------------------
 -----------------------------



 -----------------------------

--------------------------------------------------
-- Library ---------------------------------------
--------------------------------------------------

library

 ------------------------------

 import: Haskell2020Library

 ------------------------------

 hs-source-dirs: library

 ------------------------------

 exposed-modules: 
                 --Spiros

                  Prelude.Spiros

                  Prelude.Spiros.Reexports
                  Prelude.Spiros.Utilities
                  Prelude.Spiros.Classes
                  Prelude.Spiros.Types

                  Prelude.Spiros.Print
                  Prelude.Spiros.Parse

 other-modules:

                  Prelude.Spiros.Compatibility
                  Prelude.Spiros.Enriched
                  Prelude.Spiros.Exception
                  Prelude.Spiros.GUI
                  Prelude.Spiros.Generics
                  Prelude.Spiros.System
                  Prelude.Spiros.Validator

 ------------------------------

 if flag(static)

    ld-options: -static
                -pthread

 ------------------------------

 if impl(ghc >= 8.0)
    exposed-modules:
                 Prelude.Spiros.Pretty

 ------------------------------

 if impl(ghc >= 8.2)
    hs-source-dirs: other-sources

    exposed-modules:
                    Data.Digit
                    -- requires -XDerivingStrategies

 ------------------------------

 include-dirs:     include
 install-includes: include/sboo-base-feature-macros.h

 ------------------------------

 build-depends:
               base                 >= 4.7   && <5.0
               
             , generic-deriving >= 1.11
    -- for Generics.Deriving.Semigroup

             , template-haskell     >= 2.10

  --TODO , clock 

             , string-conv

  -- , protolude            >= 0.2.1
  -- -- ^ string-conv
  -- -- protolude doesn't cross-compile onto android, because of `clock`

  -- , basic-prelude
  -- --  extra symbols
  -- , base-prelude
  -- --  all of base, modulo conflicting symbols
  -- , mtl-prelude
  -- --  Reexports of most definitions from \"mtl\" and \"transformers\".

             , safe
             --, safe-exceptions 
    -- re-exports exceptions

             , mtl
             , transformers

             , text
             , bytestring

             , containers
             , vector

             , time
             , process
             , directory
             , cpuinfo >= 0.1.0.1

  -- , shake
  -- , optparse-applicative >= 0.10  && <0.13
  -- , optparse-generic     >= 1.1.0 && <1.2

             , exceptions
             , hashable   >= 1.2.5.0

             , semigroups >= 0.16.2
    -- 0.16.2 introduces Data.Semigroup.Generic

    -- for generically-deriving 
    -- TODO when was nonempty list and semigroup introduced into base? 

             , stm
             , vinyl
             , split
             , data-default-class
             , unordered-containers

             , case-insensitive

             , prettyprinter
             , show-prettyprint

                   
  -- ??

  -- , async
  -- , parallel

  -- , interpolatedstring-perl6
  -- needs haskell-src-exts, which is sloooooooooow to build (~1h)
  
 if impl(ghc >= 8.2)
    build-depends:
                  deepseq      >= 1.4.3
                  -- NFData1, NFData2
 else
    build-depends:
                  deepseq      >= 1.0

 ------------------------------

 default-language: Haskell2010

 default-extensions: CPP
                   , PackageImports

 ------------------------------

 if impl(ghc >= 7.4)
    default-extensions: ConstraintKinds
                   
 if impl(ghc >= 8.0)
    default-extensions: TemplateHaskellQuotes
                        DuplicateRecordFields
                        DeriveLift

 if impl(ghc >= 8.2)
    default-extensions: DeriveLift
                        DeriveAnyClass

 if impl(ghc >= 8.4)
    default-extensions: DerivingStrategies

 ------------------------------

 ghc-options:         -Wall

 if impl(ghc >= 8.2)
    ghc-options: -Wcpp-undef

--------------------------------------------------
-- Executables -----------------------------------
--------------------------------------------------

executable example-sprios

 ------------------------------

 default-language: Haskell2010
 
 ------------------------------

 main-is:             Main.hs

 hs-source-dirs:      executables

 ------------------------------

 other-modules: Example.Spiros

 ------------------------------

 build-depends: spiros
              , base >=4.10 && <5
              , text
              , optparse-applicative

 ------------------------------

 if flag(static)

    ld-options: -static
                -pthread

   -- cc-options: -static

   -- ghc-options: -pgml g++
   --              "-optl-Wl,--allow-multiple-definition"
   --              "-optl-Wl,--whole-archive"
   --              "-optl-Wl,-Bstatic"
   --           -- "-optl-Wl,-lfltkc"
   --              "-optl-Wl,-Bdynamic"
   --              "-optl-Wl,--no-whole-archive"

 ------------------------------

 ghc-options: -O2

              -threaded
              -rtsopts -with-rtsopts=-N             
 
              -Wno-missing-signatures
              -fno-warn-type-defaults

 ------------------------------

--------------------------------------------------
-- Tests -----------------------------------------
--------------------------------------------------

test-suite doc

 ------------------------------

 import: Haskell2020Library

 -----------------------------

 if impl(ghcjs)

    buildable: False

    -- ^ Because « GHCJSi » doesn't work (yet).

 -----------------------------

 hs-source-dirs: tests/doc

 main-is:        DocTests.hs

--other-modules:       

 -----------------------------

 build-depends: base
              , spiros

              ----------------

              , doctest

 -----------------------------

 type: exitcode-stdio-1.0

--------------------------------------------------

-- test-suite doctest

--  if flag(test-doctest) && impl(ghc)
--     buildable: True
--  else
--     buildable: False   

--  hs-source-dirs:      test
--  main-is:             DocTests.hs

--  type:                exitcode-stdio-1.0
--  default-language:    Haskell2010

--  ghc-options:         -Wall 

--  build-depends:
--     base
--   , spiros
--   , doctest

-- --------------------------------------------------

-- test-suite unit

--  if impl(ghc >= 8.0)
--     buildable: True
--  else
--     buildable: False   

--  hs-source-dirs:      test
--  main-is:             UnitTests.hs
--  other-modules:
--   UnitTests.WarningValidation

--  type:                exitcode-stdio-1.0
--  default-language:    Haskell2010

--  ghc-options:         -Wall 

--  build-depends:
--     base
--   , spiros
--   , tasty
--   , tasty-hunit

-- --------------------------------------------------

-- test-suite static
           
--  if flag(test-static)
--     buildable: True
--  else
--     buildable: False

--  hs-source-dirs:      test
--  main-is:             StaticTests.hs
--  other-modules:
--   StaticTests.Generics

--  type:                exitcode-stdio-1.0
--  default-language:    Haskell2010
--  ghc-options:         -Wall 

--  build-depends:
--     base
--   , spiros

-- --------------------------------------------------
