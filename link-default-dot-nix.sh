#!/bin/bash
set -e
########################################

# Usage:
# 
# ./link-default-dot-nix.sh 
# ./link-default-dot-nix.sh -f
#

#ARGUMENTS="$@"

########################################

function absolute-path {
 echo $(cd $(dirname "$1"); pwd)/$(basename "$1")

 # versus `readlink`, which
 # /reads links/, which will be by cosntruction identical
}

########################################

# symlink to the package's autogenerated-via-cabal2nix .nix file

PACKAGE_DOT_NIX=./nix/spiros.nix

cabal2nix . > "$PACKAGE_DOT_NIX"

ln -s $@ "$(absolute-path $PACKAGE_DOT_NIX)" default.nix

echo
cat default.nix
echo
ls -l default.nix

########################################

# A symlink actually stores the path you give literally, as a stringÂ¹. That means your link ~/mylink contains "." (one character). When you access the link, that path is interpreted relative to where the link is, rather than where you were when you made the link.
# Instead, you can store the actual path you want in the link:
#
# ln -s "$(pwd)" ~/mylink
# 
