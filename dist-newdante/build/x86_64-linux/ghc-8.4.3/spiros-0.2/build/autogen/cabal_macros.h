/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package spiros-0.2 */
#ifndef VERSION_spiros
#define VERSION_spiros "0.2"
#endif /* VERSION_spiros */
#ifndef MIN_VERSION_spiros
#define MIN_VERSION_spiros(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 0)
#endif /* MIN_VERSION_spiros */

/* package base-4.11.1.0 */
#ifndef VERSION_base
#define VERSION_base "4.11.1.0"
#endif /* VERSION_base */
#ifndef MIN_VERSION_base
#define MIN_VERSION_base(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  11 || \
  (major1) == 4 && (major2) == 11 && (minor) <= 1)
#endif /* MIN_VERSION_base */

/* package generic-deriving-1.12.2 */
#ifndef VERSION_generic_deriving
#define VERSION_generic_deriving "1.12.2"
#endif /* VERSION_generic_deriving */
#ifndef MIN_VERSION_generic_deriving
#define MIN_VERSION_generic_deriving(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  12 || \
  (major1) == 1 && (major2) == 12 && (minor) <= 2)
#endif /* MIN_VERSION_generic_deriving */

/* package template-haskell-2.13.0.0 */
#ifndef VERSION_template_haskell
#define VERSION_template_haskell "2.13.0.0"
#endif /* VERSION_template_haskell */
#ifndef MIN_VERSION_template_haskell
#define MIN_VERSION_template_haskell(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  13 || \
  (major1) == 2 && (major2) == 13 && (minor) <= 0)
#endif /* MIN_VERSION_template_haskell */

/* package string-conv-0.1.2 */
#ifndef VERSION_string_conv
#define VERSION_string_conv "0.1.2"
#endif /* VERSION_string_conv */
#ifndef MIN_VERSION_string_conv
#define MIN_VERSION_string_conv(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 2)
#endif /* MIN_VERSION_string_conv */

/* package safe-0.3.17 */
#ifndef VERSION_safe
#define VERSION_safe "0.3.17"
#endif /* VERSION_safe */
#ifndef MIN_VERSION_safe
#define MIN_VERSION_safe(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 17)
#endif /* MIN_VERSION_safe */

/* package safe-exceptions-0.1.7.0 */
#ifndef VERSION_safe_exceptions
#define VERSION_safe_exceptions "0.1.7.0"
#endif /* VERSION_safe_exceptions */
#ifndef MIN_VERSION_safe_exceptions
#define MIN_VERSION_safe_exceptions(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 7)
#endif /* MIN_VERSION_safe_exceptions */

/* package mtl-2.2.2 */
#ifndef VERSION_mtl
#define VERSION_mtl "2.2.2"
#endif /* VERSION_mtl */
#ifndef MIN_VERSION_mtl
#define MIN_VERSION_mtl(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  2 || \
  (major1) == 2 && (major2) == 2 && (minor) <= 2)
#endif /* MIN_VERSION_mtl */

/* package transformers-0.5.5.0 */
#ifndef VERSION_transformers
#define VERSION_transformers "0.5.5.0"
#endif /* VERSION_transformers */
#ifndef MIN_VERSION_transformers
#define MIN_VERSION_transformers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 5)
#endif /* MIN_VERSION_transformers */

/* package text-1.2.3.0 */
#ifndef VERSION_text
#define VERSION_text "1.2.3.0"
#endif /* VERSION_text */
#ifndef MIN_VERSION_text
#define MIN_VERSION_text(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 3)
#endif /* MIN_VERSION_text */

/* package bytestring-0.10.8.2 */
#ifndef VERSION_bytestring
#define VERSION_bytestring "0.10.8.2"
#endif /* VERSION_bytestring */
#ifndef MIN_VERSION_bytestring
#define MIN_VERSION_bytestring(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 8)
#endif /* MIN_VERSION_bytestring */

/* package deepseq-1.4.3.0 */
#ifndef VERSION_deepseq
#define VERSION_deepseq "1.4.3.0"
#endif /* VERSION_deepseq */
#ifndef MIN_VERSION_deepseq
#define MIN_VERSION_deepseq(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  4 || \
  (major1) == 1 && (major2) == 4 && (minor) <= 3)
#endif /* MIN_VERSION_deepseq */

/* package containers-0.5.11.0 */
#ifndef VERSION_containers
#define VERSION_containers "0.5.11.0"
#endif /* VERSION_containers */
#ifndef MIN_VERSION_containers
#define MIN_VERSION_containers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 11)
#endif /* MIN_VERSION_containers */

/* package vector-0.12.0.1 */
#ifndef VERSION_vector
#define VERSION_vector "0.12.0.1"
#endif /* VERSION_vector */
#ifndef MIN_VERSION_vector
#define MIN_VERSION_vector(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  12 || \
  (major1) == 0 && (major2) == 12 && (minor) <= 0)
#endif /* MIN_VERSION_vector */

/* package time-1.8.0.2 */
#ifndef VERSION_time
#define VERSION_time "1.8.0.2"
#endif /* VERSION_time */
#ifndef MIN_VERSION_time
#define MIN_VERSION_time(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  8 || \
  (major1) == 1 && (major2) == 8 && (minor) <= 0)
#endif /* MIN_VERSION_time */

/* package process-1.6.3.0 */
#ifndef VERSION_process
#define VERSION_process "1.6.3.0"
#endif /* VERSION_process */
#ifndef MIN_VERSION_process
#define MIN_VERSION_process(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  6 || \
  (major1) == 1 && (major2) == 6 && (minor) <= 3)
#endif /* MIN_VERSION_process */

/* package directory-1.3.1.5 */
#ifndef VERSION_directory
#define VERSION_directory "1.3.1.5"
#endif /* VERSION_directory */
#ifndef MIN_VERSION_directory
#define MIN_VERSION_directory(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 1)
#endif /* MIN_VERSION_directory */

/* package cpuinfo-0.1.0.1 */
#ifndef VERSION_cpuinfo
#define VERSION_cpuinfo "0.1.0.1"
#endif /* VERSION_cpuinfo */
#ifndef MIN_VERSION_cpuinfo
#define MIN_VERSION_cpuinfo(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cpuinfo */

/* package exceptions-0.10.0 */
#ifndef VERSION_exceptions
#define VERSION_exceptions "0.10.0"
#endif /* VERSION_exceptions */
#ifndef MIN_VERSION_exceptions
#define MIN_VERSION_exceptions(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 0)
#endif /* MIN_VERSION_exceptions */

/* package hashable-1.2.7.0 */
#ifndef VERSION_hashable
#define VERSION_hashable "1.2.7.0"
#endif /* VERSION_hashable */
#ifndef MIN_VERSION_hashable
#define MIN_VERSION_hashable(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 7)
#endif /* MIN_VERSION_hashable */

/* package semigroups-0.18.5 */
#ifndef VERSION_semigroups
#define VERSION_semigroups "0.18.5"
#endif /* VERSION_semigroups */
#ifndef MIN_VERSION_semigroups
#define MIN_VERSION_semigroups(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  18 || \
  (major1) == 0 && (major2) == 18 && (minor) <= 5)
#endif /* MIN_VERSION_semigroups */

/* package stm-2.4.5.0 */
#ifndef VERSION_stm
#define VERSION_stm "2.4.5.0"
#endif /* VERSION_stm */
#ifndef MIN_VERSION_stm
#define MIN_VERSION_stm(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  4 || \
  (major1) == 2 && (major2) == 4 && (minor) <= 5)
#endif /* MIN_VERSION_stm */

/* package vinyl-0.10.0 */
#ifndef VERSION_vinyl
#define VERSION_vinyl "0.10.0"
#endif /* VERSION_vinyl */
#ifndef MIN_VERSION_vinyl
#define MIN_VERSION_vinyl(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 0)
#endif /* MIN_VERSION_vinyl */

/* package split-0.2.3.3 */
#ifndef VERSION_split
#define VERSION_split "0.2.3.3"
#endif /* VERSION_split */
#ifndef MIN_VERSION_split
#define MIN_VERSION_split(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 3)
#endif /* MIN_VERSION_split */

/* package data-default-class-0.1.2.0 */
#ifndef VERSION_data_default_class
#define VERSION_data_default_class "0.1.2.0"
#endif /* VERSION_data_default_class */
#ifndef MIN_VERSION_data_default_class
#define MIN_VERSION_data_default_class(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 2)
#endif /* MIN_VERSION_data_default_class */

/* package unordered-containers-0.2.9.0 */
#ifndef VERSION_unordered_containers
#define VERSION_unordered_containers "0.2.9.0"
#endif /* VERSION_unordered_containers */
#ifndef MIN_VERSION_unordered_containers
#define MIN_VERSION_unordered_containers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 9)
#endif /* MIN_VERSION_unordered_containers */

/* package prettyprinter-1.2.1 */
#ifndef VERSION_prettyprinter
#define VERSION_prettyprinter "1.2.1"
#endif /* VERSION_prettyprinter */
#ifndef MIN_VERSION_prettyprinter
#define MIN_VERSION_prettyprinter(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 1)
#endif /* MIN_VERSION_prettyprinter */

/* tool gcc-7.3.0 */
#ifndef TOOL_VERSION_gcc
#define TOOL_VERSION_gcc "7.3.0"
#endif /* TOOL_VERSION_gcc */
#ifndef MIN_TOOL_VERSION_gcc
#define MIN_TOOL_VERSION_gcc(major1,major2,minor) (\
  (major1) <  7 || \
  (major1) == 7 && (major2) <  3 || \
  (major1) == 7 && (major2) == 3 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_gcc */

/* tool ghc-8.4.3 */
#ifndef TOOL_VERSION_ghc
#define TOOL_VERSION_ghc "8.4.3"
#endif /* TOOL_VERSION_ghc */
#ifndef MIN_TOOL_VERSION_ghc
#define MIN_TOOL_VERSION_ghc(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  4 || \
  (major1) == 8 && (major2) == 4 && (minor) <= 3)
#endif /* MIN_TOOL_VERSION_ghc */

/* tool ghc-pkg-8.4.3 */
#ifndef TOOL_VERSION_ghc_pkg
#define TOOL_VERSION_ghc_pkg "8.4.3"
#endif /* TOOL_VERSION_ghc_pkg */
#ifndef MIN_TOOL_VERSION_ghc_pkg
#define MIN_TOOL_VERSION_ghc_pkg(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  4 || \
  (major1) == 8 && (major2) == 4 && (minor) <= 3)
#endif /* MIN_TOOL_VERSION_ghc_pkg */

/* tool ghcjs-8.4.0.1 */
#ifndef TOOL_VERSION_ghcjs
#define TOOL_VERSION_ghcjs "8.4.0.1"
#endif /* TOOL_VERSION_ghcjs */
#ifndef MIN_TOOL_VERSION_ghcjs
#define MIN_TOOL_VERSION_ghcjs(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  4 || \
  (major1) == 8 && (major2) == 4 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_ghcjs */

/* tool ghcjs-pkg-8.4.2.20180420 */
#ifndef TOOL_VERSION_ghcjs_pkg
#define TOOL_VERSION_ghcjs_pkg "8.4.2.20180420"
#endif /* TOOL_VERSION_ghcjs_pkg */
#ifndef MIN_TOOL_VERSION_ghcjs_pkg
#define MIN_TOOL_VERSION_ghcjs_pkg(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  4 || \
  (major1) == 8 && (major2) == 4 && (minor) <= 2)
#endif /* MIN_TOOL_VERSION_ghcjs_pkg */

/* tool haddock-2.20.0 */
#ifndef TOOL_VERSION_haddock
#define TOOL_VERSION_haddock "2.20.0"
#endif /* TOOL_VERSION_haddock */
#ifndef MIN_TOOL_VERSION_haddock
#define MIN_TOOL_VERSION_haddock(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  20 || \
  (major1) == 2 && (major2) == 20 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_haddock */

/* tool hpc-0.67 */
#ifndef TOOL_VERSION_hpc
#define TOOL_VERSION_hpc "0.67"
#endif /* TOOL_VERSION_hpc */
#ifndef MIN_TOOL_VERSION_hpc
#define MIN_TOOL_VERSION_hpc(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  67 || \
  (major1) == 0 && (major2) == 67 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_hpc */

/* tool hsc2hs-0.68.3 */
#ifndef TOOL_VERSION_hsc2hs
#define TOOL_VERSION_hsc2hs "0.68.3"
#endif /* TOOL_VERSION_hsc2hs */
#ifndef MIN_TOOL_VERSION_hsc2hs
#define MIN_TOOL_VERSION_hsc2hs(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  68 || \
  (major1) == 0 && (major2) == 68 && (minor) <= 3)
#endif /* MIN_TOOL_VERSION_hsc2hs */

/* tool pkg-config-0.29.1 */
#ifndef TOOL_VERSION_pkg_config
#define TOOL_VERSION_pkg_config "0.29.1"
#endif /* TOOL_VERSION_pkg_config */
#ifndef MIN_TOOL_VERSION_pkg_config
#define MIN_TOOL_VERSION_pkg_config(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  29 || \
  (major1) == 0 && (major2) == 29 && (minor) <= 1)
#endif /* MIN_TOOL_VERSION_pkg_config */

/* tool runghc-8.4.3 */
#ifndef TOOL_VERSION_runghc
#define TOOL_VERSION_runghc "8.4.3"
#endif /* TOOL_VERSION_runghc */
#ifndef MIN_TOOL_VERSION_runghc
#define MIN_TOOL_VERSION_runghc(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  4 || \
  (major1) == 8 && (major2) == 4 && (minor) <= 3)
#endif /* MIN_TOOL_VERSION_runghc */

/* tool strip-2.30 */
#ifndef TOOL_VERSION_strip
#define TOOL_VERSION_strip "2.30"
#endif /* TOOL_VERSION_strip */
#ifndef MIN_TOOL_VERSION_strip
#define MIN_TOOL_VERSION_strip(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  30 || \
  (major1) == 2 && (major2) == 30 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_strip */

#ifndef CURRENT_PACKAGE_KEY
#define CURRENT_PACKAGE_KEY "spiros-0.2-inplace"
#endif /* CURRENT_PACKAGE_KEY */
#ifndef CURRENT_COMPONENT_ID
#define CURRENT_COMPONENT_ID "spiros-0.2-inplace"
#endif /* CURRENT_COMPONENT_ID */
#ifndef CURRENT_PACKAGE_VERSION
#define CURRENT_PACKAGE_VERSION "0.2"
#endif /* CURRENT_PACKAGE_VERSION */
